{"version":3,"sources":["componets/AddCategory.js","helpers/getGifs.js","componets/GifGridItem.js","componets/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","elementos","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","require","Fragment","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"0MAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAEzB,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAmBA,OAEI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAG1BR,GAAc,SAAAS,GAAS,OAAGP,GAAH,mBAAiBO,OACxCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,c,6HCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0DAE6CC,UAAUH,GAFvD,sDAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EAExB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAKzCa,QAAQC,IAAIR,GAjBO,kBAkBZA,GAlBY,4CAAH,sD,OCCPS,EAAc,SAAC,GAAiB,IAAhBL,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCJHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAErB,ECHwB,SAAC,GAAc,IAAbA,EAAY,EAAZA,SAE1B,EAAyBd,mBAAS,CAC9BqB,KAAK,GACLe,SAAQ,IAFZ,mBAAOC,EAAP,KAAaC,EAAb,KAiBA,OAZAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAlB,GACFgB,EAAS,CACLjB,KAAKC,EACLc,SAAQ,SAItB,CAACtB,IAEIuB,EDhBuBI,CAAa,CAAC3B,aAAhCa,EAAZ,EAAON,KAAYe,EAAnB,EAAmBA,QAGnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAElDsB,GAAS,mBAAGJ,UAAU,mCAAb,qBAEV,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEjBrC,EAA+BiB,EAAQ,GAA/BC,EAAR,EAAQA,SAAU3C,EAAlB,EAAkBA,SACVF,EAAgB4C,EAAQ,IAAxB5C,YAmCO8C,EAjCM,WAGjB,MAAmC5C,EAAS,CAAC,cAA7C,mBAAO6C,EAAP,KAAkB9C,EAAlB,KASA,OACI,eAAC4C,EAAD,WACI,8CACA,cAAC7C,EAAD,CAAaC,cAAeA,IAC5B,uBACA,6BAEQ8C,EAAWtB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCpBjCgC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.58de4668.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories})=>{\r\n\r\n    const [inputValue,setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        //console.log(e.target.value)\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n\r\n            //console.log(setCategories);\r\n            setCategories(elementos=>[inputValue,...elementos]);\r\n            setInputValue('');\r\n\r\n        }\r\n    \r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async(category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(category)}&api_key=DvfvnUXgjchTcROMT7XrAThyvLEnA8th`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n\r\n    });\r\n\r\n    console.log(gifs);\r\n    return gifs;\r\n}","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    //console.log({id,title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs({category});\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading&&<p className=\"animate__animated animate__flash\">Loading</p>}\r\n            \r\n            <div className=\"card-grid\"> \r\n                {\r\n                    images.map((img)=>(\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ({category})=>{\r\n\r\n    const [state,setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(gifs=>{\r\n                setState({\r\n                    data:gifs,\r\n                    loading:false\r\n                })\r\n            })\r\n\r\n    },[category])\r\n\r\n    return state;//{data:[],loagind:true}\r\n\r\n}\r\n\r\n\r\n","import { GifGrid } from \"./componets/GifGrid\";\r\n\r\nconst { Fragment, useState } = require(\"react\");\r\nconst { AddCategory } = require(\"./componets/AddCategory\");\r\n\r\nconst GitExpertApp = ()=>{\r\n\r\n    //const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n    const [categories,setCategories] = useState(['One Punch']);\r\n\r\n    //const handleAdd = ()=>{\r\n\r\n        //setCategories([...categories,'HunterX']);\r\n        //setCategories(cats =>[...cats,'HUnterXHunter'])\r\n\r\n    //};\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }    \r\n            </ol>   \r\n        </Fragment>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default GitExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GitExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}